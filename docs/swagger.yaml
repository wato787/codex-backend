basePath: /api
definitions:
  dto.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
    type: object
  dto.SignupRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  dto.SignupResponse:
    properties:
      email:
        type: string
      id:
        type: integer
    type: object
  dto.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: Go言語とGORMで構築されたAPI
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Codex API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: ユーザー認証とトークン発行を行う
      parameters:
      - description: ログイン情報
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ログイン成功
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: リクエスト不正
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: 認証失敗
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: ユーザーログインAPI
      tags:
      - auth
  /api/auth/signup:
    post:
      consumes:
      - application/json
      description: 新規ユーザーを登録する
      parameters:
      - description: サインアップ情報
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.SignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 登録成功
          schema:
            $ref: '#/definitions/dto.SignupResponse'
        "400":
          description: リクエスト不正
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "409":
          description: ユーザー既存
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: ユーザー登録API
      tags:
      - auth
  /health:
    get:
      consumes:
      - application/json
      description: Check the health of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check endpoint
      tags:
      - Health
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
